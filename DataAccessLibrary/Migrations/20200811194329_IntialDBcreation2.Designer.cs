// <auto-generated />
using System;
using DataAccessLibrary.DataAccess.PeopleMovieContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLibrary.Migrations
{
    [DbContext(typeof(PeopleMovieContext))]
    [Migration("20200811194329_IntialDBcreation2")]
    partial class IntialDBcreation2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccessLibrary.Models.Cart.CartModel", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateMade")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasPayed")
                        .HasColumnType("bit");

                    b.Property<int?>("OwnerIDPersonID")
                        .HasColumnType("int");

                    b.HasKey("CartID");

                    b.HasIndex("OwnerIDPersonID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Genre.GenreModel", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MovieModelMovieID")
                        .HasColumnType("int");

                    b.HasKey("GenreID");

                    b.HasIndex("MovieModelMovieID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Movie.MovieModel", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartModelCartID")
                        .HasColumnType("int");

                    b.Property<string>("MovieName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieID");

                    b.HasIndex("CartModelCartID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Person.PersonModel", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Cart.CartModel", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.Person.PersonModel", "OwnerID")
                        .WithMany()
                        .HasForeignKey("OwnerIDPersonID");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Genre.GenreModel", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.Movie.MovieModel", null)
                        .WithMany("Genres")
                        .HasForeignKey("MovieModelMovieID");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Movie.MovieModel", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.Cart.CartModel", null)
                        .WithMany("Movies")
                        .HasForeignKey("CartModelCartID");
                });
#pragma warning restore 612, 618
        }
    }
}
